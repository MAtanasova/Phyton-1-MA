# Да се напише програма, която съдържа речници с:
# имена, факултетни номера и дати на раждане на студентите и
# да се дефинира функция, която при търсене по някой от посочените критерии,
# да извежда на екрана и останалите данни за студента.

# Например, при търсене по ФН, на екрана да се покажат също така:
# име и рожденна дата на студента.

Names=['Анжела','Гергана','Йоана','Кристиян','Марио','Рая','Сузана','Гергана'] #Съдържа имената на студентите като стрингове
FN=['1','2','3','4','5','6','7','8'] # Съдържа факултетните им номера като стрингове
BD=['12.01.2000','23.03.2001','12.01.2000','23.04.2001','15.05.2000','15.05.2001','06.06.2001','01.06.2000','25.12.2000','31.12.2000'] #Съдържа рожденните им дати като стрингове във формат дд.мм.гггг

# В речника D_names можем да търсим по имена
# Ограничително условие: Не трябва да има повтарящи се имена,
# защото няма да можем да направим речник с ключове имената
D_names=dict(zip(Names,tuple(zip(FN,BD))))
# print (D_names['Анжела'])

# В речника D_FN можем да търсим по факултетни номера
# Ограничително условие: няма, т.к. факултетните номера са уникални
D_FN=dict(zip(FN,tuple(zip(Names,BD))))
# print (D_FN['13564'])

# В речника D_BD можем да търсим по рождени дати
# Ограничително условие: Не трябва да има повтарящи се дати,
# защото няма да можем да направим речник с ключове имената
D_names=dict(zip(BD,tuple(zip(FN,Names))))
# print (D_names['12.01.2002'])

# От трите възможни речника само D_FN е универсален, т.е. може да се използва
# с повтарящи се имена и дати на раждане. Следващата част от скрипта демонстрира
# търсене по имена и дати именно в него:

def choose_search_option():

    s="Моля, изберете по какво искате да търсите в речника:\n"
    s+="по имена (въведете 0)\n"
    s += "по факултетни номера (въведете 1)\n"
    s += "по дата на раждане (въведете 2)\n"
    print(s)
    try:
        choise=int(input())
        print("Моля, спазвайте указанията за проверка, т.к. програмата не проверява за грешно попълнени данни.")
        if choise==2: search_for=input("Въведете датата във формат дд.мм.гггг: ")
        elif choise==1: search_for=input("Въведете факултетен номер: ")
        elif choise==0: search_for=input("Въведете малкото име на студента: ")
        else:
            choise = "error"
            search_for = "error"
    except:
        choise="error"
        search_for="error"

    return (choise,search_for)

def search_by_FN(fn):
    global D_FN
    print('%s е роден на %s' %(D_FN[fn][0],D_FN[fn][1]))
def search_by_names(name):
    global D_FN
    print("Студенти, които се казват %s:\n" % (name))
    for k,v in D_FN.items():
        if v[0]==name: print("ФН: %s има рожден ден на %s" %(k,v[1]))
def search_by_BD(bd):
    global D_FN
    print("На %s рожден ден имат:\n" % (bd))
    for k,v in D_FN.items():
        if v[1]==bd: print("ФН: %s се казва %s" %(k,v[0]))

# Основна програма:
result=choose_search_option()
if result[0]=="error":
    print("Грешно въведена опция за избор!")
else:
    if result[0] == 2:
        search_by_BD(result[1])
    elif result[0] == 1:
        search_by_FN(result[1])
    elif result[0] == 0:
        search_by_names(result[1])

